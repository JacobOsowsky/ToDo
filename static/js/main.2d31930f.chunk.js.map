{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","reportWebVitals.js","index.js"],"names":["AddTask","state","text","checked","date","Date","toISOString","slice","changeText","e","setState","target","value","changeCheckbox","changeDate","handleClick","length","alert","props","add","minDate","maxDate","className","type","placeholder","id","this","onChange","htmlFor","min","max","onClick","Component","Task","important","active","style","color","done","delete","getDate","finish","toLocaleString","TaskList","tasks","filter","task","activeTasks","map","finishDate","doneTasks","App","addNewTask","newTask","finishTask","forEach","getTime","deleteTask","index","findIndex","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d31930f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './AddTask.css'\r\n\r\nclass AddTask extends Component {\r\n    state = { \r\n        text: \"\",\r\n        checked: false,\r\n        date: new Date().toISOString().slice(0,10)\r\n     }\r\nchangeText=(e)=>{\r\nthis.setState({\r\n    text: e.target.value\r\n})\r\n}\r\n\r\nchangeCheckbox=(e)=>{\r\n    this.setState({\r\n        checked: e.target.checked\r\n    })\r\n    }\r\n\r\nchangeDate=(e)=> {\r\nthis.setState({\r\n    date: e.target.value\r\n})\r\n}\r\n\r\nhandleClick=()=> {\r\n    const {text,date,checked} = this.state;\r\n    if (text.length>2){\r\n    const add = this.props.add(text, date, checked)\r\n    if(add){\r\nthis.setState({\r\n    text: '',\r\n    checked: false,\r\n    date: new Date().toISOString().slice(0,10)\r\n})}\r\n    }else return (\r\n        alert(\"za krótki tekst\")\r\n    )\r\n}\r\n\r\n    render() { \r\n        const minDate = new Date().toISOString().slice(0,10);\r\n        let maxDate = minDate.slice(0,4) *1 + 1;\r\n        maxDate = maxDate + minDate.slice(4,10)\r\n        return ( \r\n            <div className=\"add\">\r\n                <input type=\"text\" placeholder=\"wpisz zadanie\" id=\"text\" value={this.state.text} onChange={this.changeText}></input>\r\n                <input type=\"checkbox\" id=\"checked\" checked={this.state.checked} onChange={this.changeCheckbox}></input>\r\n                <label htmlFor=\"checked\">Priorytet</label> <br/>\r\n                <label htmlFor=\"date\">Do kiedy</label>\r\n                <input type=\"date\" id=\"date\" value={this.state.date} min={minDate} max={maxDate} onChange={this.changeDate}></input> <br/>\r\n                <button onClick={this.handleClick}>Dodaj</button>\r\n                \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddTask;","import React from 'react';\r\n\r\nconst Task = (props) => {\r\n    const style = {\r\n        color: \"red\"\r\n    }\r\n    const important = props.important\r\n    if(props.active){\r\n    return ( \r\n        <div className=\"task\">\r\n            <p>\r\n                <strong style = {important ? style : null}>{props.text}</strong>\r\n                <span> - do {props.date} </span>\r\n                <button onClick={()=>props.done(props.id)}>Wykonane</button>\r\n                <button onClick={()=>props.delete(props.id)}>X</button>\r\n            </p>\r\n        </div>\r\n     );} else { \r\n         const getDate = new Date(props.finish).toLocaleString()\r\n         return (\r\n        <div className=\"task\">\r\n        <p>\r\n            <strong>{props.text}</strong>\r\n            <em> (Zrobić do {props.date}) </em> <br></br>\r\n            <span> - potwierdzenie wykonania {getDate}</span>\r\n            <button onClick={()=>props.delete(props.id)}>X</button>\r\n        </p>\r\n    </div>\r\n     )}\r\n}\r\n \r\nexport default Task;","import React from 'react';\r\nimport Task from './Task'\r\n\r\nconst TaskList = (props) => {\r\nconst active = props.tasks.filter(task=>task.active);\r\nconst done = props.tasks.filter(task=>!task.active)\r\n    const activeTasks = active.map(task=>\r\n    <Task \r\n    key={task.id} \r\n    text={task.text} \r\n    date={task.date} \r\n    done={props.done} \r\n    delete={props.delete} \r\n    id={task.id} \r\n    important={task.important} \r\n    active={task.active}\r\n    finish={task.finishDate}\r\n    />)\r\n    const doneTasks = done.map(task=>\r\n        <Task \r\n        key={task.id} \r\n        text={task.text} \r\n        date={task.date} \r\n        done={props.done} \r\n        delete={props.delete} \r\n        id={task.id} \r\n        important={task.important} \r\n        active={task.active}\r\n        finish={task.finishDate}\r\n        />)\r\n    return ( \r\n        <>\r\n            <div className=\"todo\">\r\n                <h3>Zadania do zrobienia</h3>\r\n                {activeTasks}\r\n            </div>\r\n\r\n            <div className=\"done\">\r\n                <h4>Zadania zrobione ({doneTasks.length})</h4>\r\n                {doneTasks.length > 2 && <span>Wyświetlono 2 ostatnie zadania</span>}\r\n                {doneTasks.slice(0,2)}\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default TaskList;","import React, {Component} from 'react';\nimport './App.css';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList'\n\nclass App extends Component {\n  state = { \n    tasks: [\n      {\n        id: 0,\n        text: 'Umyć samochód',\n        date: '2018-03-13',\n        important: true,\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 1,\n        text: 'Pograć w LoLa',\n        date: '2018-08-10',\n        important: false,\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 2,\n        text: 'Zrobić obiad',\n        date: '2018-01-03',\n        important: true,\n        active: true,\n        finishDate: null\n      }\n    ]\n   }\n\n   addNewTask=(text,date,important)=>{\n     const newTask = {\n      id: this.state.tasks.length,\n      text,\n      date,\n      important,\n      active: true,\n      finishDate: null\n     }\n     this.setState({\n       tasks: [...this.state.tasks, newTask]\n     })\n\n     return true\n   }\n\nfinishTask = (id)=> {\n  const tasks = [...this.state.tasks];\n  tasks.forEach(task=>{\n    if(task.id === id){\n      task.active = false;\n      task.finishDate = new Date().getTime();\n    }\n  })\n  this.setState({\n    tasks\n  })\n\n  \n}\n\ndeleteTask = (id) => {\n  const tasks = [...this.state.tasks];\n  const index = tasks.findIndex(task=> task.id === id);\n  tasks.splice(index,1);\n  this.setState({\n    tasks\n  })\n  \n  /* ALTERNATYWNA METODA:\n  let tasks = Array.from(this.state.tasks);\n  tasks = tasks.filter(task=> task.id !== id);\n  this.setState({\n    tasks\n  })\n  */\n}\n\n  render() { \n    const tasks = this.state.tasks\n    return (\n      <div className=\"wrapper\">\n        <h1>TODO App</h1>\n        <AddTask add={this.addNewTask}/>\n        <TaskList tasks={tasks} done={this.finishTask} delete={this.deleteTask}/>\n      </div>\n      );\n  }\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}