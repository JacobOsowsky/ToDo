{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","reportWebVitals.js","index.js"],"names":["AddTask","state","className","Component","Task","props","text","date","onClick","done","id","delete","TaskList","active","tasks","filter","task","activeTasks","map","doneTasks","length","slice","App","important","finishDate","finishTask","forEach","Date","getTime","setState","deleteTask","index","findIndex","splice","this","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAaeA,E,4MAVXC,MAAQ,G,4CACR,WACI,OACI,qBAAKC,UAAU,MAAf,4B,GAJUC,aCaPC,EAbF,SAACC,GACV,OACI,qBAAKH,UAAU,OAAf,SACI,8BACI,iCAASG,EAAMC,OACf,0CAAaD,EAAME,KAAnB,OACA,wBAAQC,QAAS,kBAAIH,EAAMI,KAAKJ,EAAMK,KAAtC,sBACA,wBAAQF,QAAS,kBAAIH,EAAMM,OAAON,EAAMK,KAAxC,qBCiBDE,EAvBE,SAACP,GAClB,IAAMQ,EAASR,EAAMS,MAAMC,QAAO,SAAAC,GAAI,OAAEA,EAAKH,UACvCJ,EAAOJ,EAAMS,MAAMC,QAAO,SAAAC,GAAI,OAAGA,EAAKH,UAClCI,EAAcJ,EAAOK,KAAI,SAAAF,GAAI,OACnC,cAAC,EAAD,CAAoBV,KAAMU,EAAKV,KAAMC,KAAMS,EAAKT,KAAME,KAAMJ,EAAMI,KAAME,OAAQN,EAAMM,OAAQD,GAAIM,EAAKN,IAA5FM,EAAKN,OACVS,EAAYV,EAAKS,KAAI,SAAAF,GAAI,OAC3B,cAAC,EAAD,CAAoBV,KAAMU,EAAKV,KAAMC,KAAMS,EAAKT,KAAME,KAAMJ,EAAMI,KAAME,OAAQN,EAAMM,OAAQD,GAAIM,EAAKN,IAA5FM,EAAKN,OACpB,OACI,qCACI,sBAAKR,UAAU,OAAf,UACI,sDACCe,KAGL,sBAAKf,UAAU,OAAf,UACI,oDAAuBiB,EAAUC,OAAjC,OACCD,EAAUC,OAAS,GAAK,uEACxBD,EAAUE,MAAM,EAAE,UC2DpBC,E,4MAzEbrB,MAAQ,CACNa,MAAO,CACL,CACEJ,GAAI,EACJJ,KAAM,wBACNC,KAAM,aACNgB,WAAW,EACXV,QAAQ,EACRW,WAAY,MAEd,CACEd,GAAI,EACJJ,KAAM,qBACNC,KAAM,aACNgB,WAAW,EACXV,QAAQ,EACRW,WAAY,MAEd,CACEd,GAAI,EACJJ,KAAM,oBACNC,KAAM,aACNgB,WAAW,EACXV,QAAQ,EACRW,WAAY,Q,EAKpBC,WAAa,SAACf,GACZ,IAAMI,EAAK,YAAO,EAAKb,MAAMa,OAC7BA,EAAMY,SAAQ,SAAAV,GACTA,EAAKN,KAAOA,IACbM,EAAKH,QAAS,EACdG,EAAKQ,YAAa,IAAIG,MAAOC,cAGjC,EAAKC,SAAS,CACZf,W,EAMJgB,WAAa,SAACpB,GACZ,IAAMI,EAAK,YAAO,EAAKb,MAAMa,OACvBiB,EAAQjB,EAAMkB,WAAU,SAAAhB,GAAI,OAAGA,EAAKN,KAAOA,KACjDI,EAAMmB,OAAOF,EAAM,GACnB,EAAKF,SAAS,CACZf,W,4CAYF,WACE,IAAMA,EAAQoB,KAAKjC,MAAMa,MACzB,OACE,sBAAKZ,UAAU,UAAf,UACE,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAUY,MAAOA,EAAOL,KAAMyB,KAAKT,WAAYd,OAAQuB,KAAKJ,oB,GApElD3B,aCOHgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.022f30a9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass AddTask extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"add\">\r\n                Dodaj Task\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddTask;","import React from 'react';\r\n\r\nconst Task = (props) => {\r\n    return ( \r\n        <div className=\"task\">\r\n            <p>\r\n                <strong>{props.text}</strong>\r\n                <span> - do {props.date} </span>\r\n                <button onClick={()=>props.done(props.id)}>Wykonane</button>\r\n                <button onClick={()=>props.delete(props.id)}>X</button>\r\n            </p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Task;","import React from 'react';\r\nimport Task from './Task'\r\n\r\nconst TaskList = (props) => {\r\nconst active = props.tasks.filter(task=>task.active);\r\nconst done = props.tasks.filter(task=>!task.active)\r\n    const activeTasks = active.map(task=>\r\n    <Task key={task.id} text={task.text} date={task.date} done={props.done} delete={props.delete} id={task.id}/>)\r\n    const doneTasks = done.map(task=>\r\n        <Task key={task.id} text={task.text} date={task.date} done={props.done} delete={props.delete} id={task.id}/>)\r\n    return ( \r\n        <>\r\n            <div className=\"todo\">\r\n                <h3>Zadania do zrobienia</h3>\r\n                {activeTasks}\r\n            </div>\r\n\r\n            <div className=\"done\">\r\n                <h4>Zadania zrobione ({doneTasks.length})</h4>\r\n                {doneTasks.length > 2 && <span>Wyświetlono 2 ostatnie zadania</span>}\r\n                {doneTasks.slice(0,2)}\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default TaskList;","import React, {Component} from 'react';\nimport './App.css';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList'\n\nclass App extends Component {\n  state = { \n    tasks: [\n      {\n        id: 0,\n        text: 'Umyć samochód',\n        date: '2018-03-13',\n        important: true,\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 1,\n        text: 'Pograć w LoLa',\n        date: '2018-08-10',\n        important: true,\n        active: true,\n        finishDate: null\n      },\n      {\n        id: 2,\n        text: 'Zrobić obiad',\n        date: '2018-01-03',\n        important: true,\n        active: true,\n        finishDate: null\n      }\n    ]\n   }\n\nfinishTask = (id)=> {\n  const tasks = [...this.state.tasks];\n  tasks.forEach(task=>{\n    if(task.id === id){\n      task.active = false;\n      task.finishDate = new Date().getTime();\n    }\n  })\n  this.setState({\n    tasks\n  })\n\n  \n}\n\ndeleteTask = (id) => {\n  const tasks = [...this.state.tasks];\n  const index = tasks.findIndex(task=> task.id === id);\n  tasks.splice(index,1);\n  this.setState({\n    tasks\n  })\n  \n  /* ALTERNATYWNA METODA:\n  let tasks = Array.from(this.state.tasks);\n  tasks = tasks.filter(task=> task.id !== id);\n  this.setState({\n    tasks\n  })\n  */\n}\n\n  render() { \n    const tasks = this.state.tasks\n    return (\n      <div className=\"wrapper\">\n        <h1>TODO App</h1>\n        <AddTask/>\n        <TaskList tasks={tasks} done={this.finishTask} delete={this.deleteTask}/>\n      </div>\n      );\n  }\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}